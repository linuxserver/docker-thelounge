---

# project information
project_name: thelounge
project_url: "https://thelounge.github.io/"
project_logo: "https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) (a fork of shoutIRC) is a web IRC client that you host on your own server."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Stable releases." }
  - { tag: "next", desc: "Next Pre-Releases." }
  - { tag: "nightly", desc: "Nightly images from commits in master." }

# container parameters
common_param_env_vars_enabled: true #PGID, PUID, etc, you can set it to 'optional'
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "</path/to/appdata/config>", desc: "Configuration files." }
param_usage_include_ports: true
param_ports:
  - { external_port: "9000", internal_port: "9000", port_desc: "Application WebUI" }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  * When the application first runs, it will populate its /config
    
  * Stop the container

  * Now from the host, edit `/config/config.js`, wherever you've mapped it
    
    * In most cases you want the value `public: false` to allow named users only
    
    * Setting the two prefetch values to true improves usability, but uses more storage

  * Once you have the configuration you want, save it and start the container again

  * For each user, run the command

    * `docker exec -it thelounge s6-setuidgid abc thelounge add <user>`
    
    * You will be prompted to enter a password that will not be echoed.
    
    * Saving logs to disk is the default, this consumes more space but allows scrollback.

  * To log in to the application, browse to `http://<hostip>:9000`

  * You should now be prompted for a username and password on the webinterface.

  * Once logged in, you can add an IRC network. Some defaults are preset for Freenode.

# changelog

changelogs:
  - { date: "14.04.22:", desc: "Slim image." }
  - { date: "12.04.22:", desc: "Install from source using yarn. Cleanups in nightly branch." }
  - { date: "11.04.22:", desc: "Rebasing to alpine 3.15. Add tags for pre-releases." }
  - { date: "23.01.21:", desc: "Rebasing to alpine 3.13." }
  - { date: "02.06.20:", desc: "Rebasing to alpine 3.12." }
  - { date: "19.12.19:", desc: "Rebasing to alpine 3.11." }
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "15.05.19:", desc: "Update Arm variant images to build sqlite3 module." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "22.02.19:", desc: "Rebasing to alpine 3.9." }
  - { date: "28.01.19:", desc: "Add pipeline logic and multi arch." }
  - { date: "25.08.18:", desc: "Use global install, simplifies adding users." }
  - { date: "20.08.18:", desc: "Rebase to alpine 3.8." }
  - { date: "06.01.18:", desc: "Rebase to alpine 3.7." }
  - { date: "26.05.17:", desc: "Rebase to alpine 3.6." }
  - { date: "06.02.17:", desc: "Rebase to alpine 3.5." }
  - { date: "14.10.16:", desc: "Bump to pickup 2.10 release." }
  - { date: "14.10.16:", desc: "Add version layer information." }
  - { date: "11.09.16:", desc: "Add layer badges to README." }
  - { date: "31.08.16:", desc: "Initial Release." }
